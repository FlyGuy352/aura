<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extensible="true" extends="ui:abstractDataGrid" support="PROTO" description="Represents a table containing dynamic rows of data with inline edit support">
    <aura:attribute name="summary" type="String" description="The summary of the content of a table that's accessible to screen readers"/>
    <aura:attribute name="useRowHeaders" type="Boolean" default="false" description="Makes the first column of each row a header cell"/>
    <aura:attribute name="devNameOrId" type="String" description="Id or alias for the virtual list" />
    <aura:attribute name="selectionData" type="Object" description="A list of selected items/rows in the data grid" />
    <aura:attribute name="tableItems" type="List" access="PRIVATE" description="Mutable set of table data"/>

    <aura:registerevent name="updateRowAttributes" type="ui:updateGridRow" description="The event fired when the attributes on a dataGrid row is updated."/>

    <aura:handler name="init" value="{!this}" action="{!c.init}"/>
    <aura:handler name="updateRowAttributes" action="{!c.handleUpdateRowAttrs}"/>
    <aura:handler name="change" value="{!v.items}" action="{!c.handleItemsChange}" description="This lives here due to a bug in value objects."/>
    <aura:handler name="change" value="{!v.columns}" action="{!c.handleColumnsChange}"/>

    <aura:locator target="*" alias="data-grid-columns-content" description="Content in data grid columns">
        <aura:locatorContext key="devNameOrId" value="{!v.devNameOrId}"/>
    </aura:locator>

    <!-- 
     ~ Default implementation is a table. Consider moving this logic to ui:dataTable 
     ~ A dataTable is potentially a concrete of a dataGrid.
     -->
    <table class="{! v.class + ' ' + v.state + ' ' + v.mode }" onclick="{!c.handleClick}" summary="{!v.summary}" aura:flavorable="true">
        <thead>
            <tr aura:id="headerRow">
                <aura:iteration items="{!v.columns}" var="item" indexVar="index">
                    <!-- 
                        FIXME! - This assumes that a ui:dataGridColumn component has been created already and is assigned within the columns array.
                        I think we should be accepting a JS/JSON object here and creating ui:dataGridColumn components on the fly.
                    -->
                    {!item}
                </aura:iteration>
            </tr>
        </thead>
        <tfoot aura:id="tfoot"></tfoot>
        <tbody aura:id="tbody">
            <aura:iteration items="{!v.items}" var="row" indexVar="rowIndex">
                <ui:dataGridRow aura:id="tableRow" rowData="{!row}" index="{!rowIndex}" columns="{!v.columns}"/>
            </aura:iteration>
        </tbody>
    
    </table>	

</aura:component>
